// <auto-generated />
using System;
using MegaDeskWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MegaDeskWeb.Migrations
{
    [DbContext(typeof(MegaDeskWebContext))]
    [Migration("20190614045236_SeedRushShipping")]
    partial class SeedRushShipping
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MegaDeskWeb.Desk", b =>
                {
                    b.Property<int>("DeskID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Depth");

                    b.Property<int>("NumDrawers");

                    b.Property<int>("SurfaceMaterialID");

                    b.Property<decimal>("Width");

                    b.HasKey("DeskID");

                    b.HasIndex("SurfaceMaterialID");

                    b.ToTable("Desk");
                });

            modelBuilder.Entity("MegaDeskWeb.DeskQuote", b =>
                {
                    b.Property<int>("DeskQuoteID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DeskID");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<DateTime>("QuoteDate");

                    b.Property<int>("RushShippingID");

                    b.HasKey("DeskQuoteID");

                    b.HasIndex("DeskID");

                    b.HasIndex("RushShippingID");

                    b.ToTable("DeskQuote");
                });

            modelBuilder.Entity("MegaDeskWeb.RushShipping", b =>
                {
                    b.Property<int>("RushShippingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RushShippingName");

                    b.Property<decimal>("RushShippingPrice");

                    b.HasKey("RushShippingID");

                    b.ToTable("RushShipping");
                });

            modelBuilder.Entity("MegaDeskWeb.SurfaceMaterial", b =>
                {
                    b.Property<int>("SurfaceMaterialID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("SurfaceMaterialInt");

                    b.Property<string>("SurfaceMaterialName");

                    b.HasKey("SurfaceMaterialID");

                    b.ToTable("SurfaceMaterial");
                });

            modelBuilder.Entity("MegaDeskWeb.Desk", b =>
                {
                    b.HasOne("MegaDeskWeb.SurfaceMaterial", "SurfaceMaterial")
                        .WithMany()
                        .HasForeignKey("SurfaceMaterialID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MegaDeskWeb.DeskQuote", b =>
                {
                    b.HasOne("MegaDeskWeb.Desk", "Desk")
                        .WithMany()
                        .HasForeignKey("DeskID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MegaDeskWeb.RushShipping", "RushShipping")
                        .WithMany()
                        .HasForeignKey("RushShippingID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
